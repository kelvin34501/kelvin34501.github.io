---
layout: post
title:  "exercise-2.1"
date:   2018-01-26 17:17:17 +0800
category: CLRS
---
## 2.1 Insertion sort
### 2.1-1
+ [31, 41, 59, 26, 41, 58] - begin
+ [31, 41, 59, 26, 41, 58] - 1
+ [31, 41, 59, 26, 41, 58] - 2
+ [26, 31, 41, 59, 41, 58] - 3
+ [26, 31, 41, 41, 59, 58] - 4
+ [26, 31, 41, 41, 58, 59] - 5
+                          - end

### 2.1-2
#### pseudo-code:
  INSERTION-SORT(A)
    for j = 2 to A.length
      key = A[j]
      i = j - 1
      while i > 0 and A[i] < key
        A[i+1] = A[i]
        i = i - 1
      A[i+1] = key


#### c-code
{% highlight c %}
void insertion_sort(int A[], int n)
{
        int i,j;
        for(j=1; j<n; j++)
        {
                key = A[j];
                for(i=j-1; i>0; i--)
                {
                        if(A[i] < key)
                                A[i+1] = A[i];
                        else
                                break;
                }
                A[i+1] = key;
        }
}
{% endhighlight %}

### 2.1-3
#### pseudo code
  FIND(A, key)
    for j = 1 to A.length
      if A[j] == key
        return j
    return NIL


